melted_cormat$`Predictor Label` <- factor(melted_cormat$`Predictor Label`,
ordered=TRUE,
levels=unique(melted_cormat$`Predictor Label`[order(melted_cormat$Predictor)]))
melted_cormat$`Predictor Category` <- factor(melted_cormat$`Predictor Category`,
ordered=TRUE,
levels=facets)
melted_cormat$Outcome <- factor(melted_cormat$Outcome,
ordered=TRUE,
levels=oc)
melted_cormat$`Outcome Label` <- factor(melted_cormat$`Outcome Label`,
ordered=TRUE,
levels=unique(melted_cormat$`Outcome Label`[order(melted_cormat$Outcome)]))
# generate label text (only label tiles with abs(coeff) > 0.1)
melted_cormat <- melted_cormat %>%
mutate(
lbl = case_when(
value > 0.5  ~ ">0.5",
value < -.5  ~ "<-0.5",
TRUE ~ fround(value,1)
),
value2 = case_when(
value >= 0.5  ~  .5,
value <=-.5   ~ -.5,
TRUE ~ value
),
wrap=case_when(
`Outcome Label` == "Low GPA" ~ 3,
TRUE ~ 12
)
)
s <- 48
melted_cormat <- melted_cormat %>%
mutate(`Outcome Label` = factor(Outcome,
levels = c("Absences", "Suspensions", "Course_Failure",
"GPA_Below_2_2", "Below_Basic_PSSA", "Below_Basic_keystone"),
labels = c("Absenteeism", "Suspension", "Course failure",
"Low GPA", "PSSA below basic", "Keystone below basic")),
EMH = factor(EMH, levels = c("E", "M", "H"),
labels = c("Elementary\nschool", "Middle\nschool", "High\nschool")))
# build the heatmap!
if (grid) {
ggheatmap <- ggplot(melted_cormat, aes(y=`Predictor Label`, x=`Outcome Label`, fill=value2)) +
facet_grid(`Predictor Category` ~ EMH, space = "free", scales="free", switch = "y",
labeller = labeller(`Outcome Label` = label_wrap_gen(3),
`Predictor Category` = label_wrap_gen(10))) +
geom_tile(color = "white") +
#     geom_text(aes(label=lbl)) +
xlab(NULL) + ylab(NULL) +
scale_x_discrete(position = "top") +
theme(strip.placement = "outside",
strip.background = element_rect(fill=NA, color = NA),
strip.text.x = element_text(size=s),
axis.text.x.top = element_text(size=s*3/4, angle = 90, hjust = 0, vjust = .5),
# axis.text.x = element_text(size=s, angle = 90, hjust = 0, vjust = .5),
strip.text.y = element_text(size=s, angle=180),
axis.text.y = element_text(size=s*3/4),
axis.title = element_text(size=s),
legend.text=element_text(size=s),
legend.title=element_text(size=s),
legend.position = "bottom",
legend.key.width = unit(3, "in"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_fill_gradient2(low = "blue", high="red", mid="gray",
midpoint = 0, space="Lab",
breaks=c(-.5, -.25, 0, .25, .5),
limits=c(-.5,.5),
labels=c("<-50", "-25", "0", "25", ">50"),
name = NULL)
} else {
ggheatmap <- ggplot(melted_cormat, aes(y=`Predictor Label`, x=`Outcome Label`, fill=value2)) +
facet_grid(. ~ EMH, space = "free", scales="free",
labeller = labeller(`Outcome Label` = label_wrap_gen(3))) +
geom_tile(color = "white") +
#     geom_text(aes(label=lbl)) +
xlab(NULL) + ylab(NULL) +
scale_x_discrete(position = "top") +
theme(strip.placement = "outside",
strip.background = element_rect(fill=NA, color = NA),
strip.text.x = element_text(size=s),
axis.text.x.top = element_text(size=s*3/4, angle = 90, hjust = 0, vjust = .5),
# axis.text.x = element_text(size=s, angle = 90, hjust = 0, vjust = .5),
axis.text.y = element_text(size=s*3/4),
axis.title = element_text(size=s),
legend.text=element_text(size=s),
legend.title=element_text(size=s),
legend.position = "bottom",
legend.key.width = unit(3, "in"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_fill_gradient2(low = "blue", high="red", mid="gray",
midpoint = 0, space="Lab",
breaks=c(-.5, -.25, 0, .25, .5),
limits=c(-.5,.5),
labels=c("<-50", "-25", "0", "25", ">50"),
name=NULL)
}
return(ggheatmap)
}
figure1 <-
corrmap(
district = "PPS",
facets=c("Services and removals",
"Services started",
"Services ongoing",
"Services ended"),
pd=c("childwelfarenonplacementservices_num_month",
"removal",
"daysinremoval",
"anyplacement_start",
"kinship_foster_start",
"nonkinship_foster_start",
"residential_placement_start",
"anyplacement_ongoing",
"kinship_foster_ongoing",
"nonkinship_foster_ongoing",
"residential_placement_ongoing",
"anyplacement_end",
"kinship_foster_end",
"nonkinship_foster_end",
"residential_placement_end"),
grid=TRUE
)
figure1
figure2 <-
corrmap(
district = "Propel",
facets=c("Services and removals",
"Services started",
"Services ongoing",
"Services ended"),
pd=c("childwelfarenonplacementservices_num_month",
"removal",
"daysinremoval",
"anyplacement_start",
"kinship_foster_start",
"nonkinship_foster_start",
"residential_placement_start",
"anyplacement_ongoing",
"kinship_foster_ongoing",
"nonkinship_foster_ongoing",
"residential_placement_ongoing",
"anyplacement_end",
"kinship_foster_end",
"nonkinship_foster_end",
"residential_placement_end"),
grid=TRUE
)
figure2
figure3 <-
corrmap(
district = "PPS",
grid=TRUE
)
figure3
figure4 <-
corrmap(
district = "Propel",
grid=TRUE
)
figure4
# why is figure out of order??
figure5 <-
corrmap(
district = "PPS",
pd=c("juv_prob_case",
"juv_prob_case_start",
"adju_placement",
"adju_day",
"adju_probation",
"consent_nonplacement",
"consent_day",
"countyjail_num_month",
"jailbooking",
"adult_probation",
"totalfamcourt",
"delinquency",
"custodianship",
"service_corrd"),
facets=c("Juvenile justice",
"Jail and adult probation",
"Family court"),
grid=TRUE
)
figure5
figure6 <-
corrmap(
district = "Propel",
pd=c("juv_prob_case",
"juv_prob_case_start",
"adju_placement",
"adju_day",
"adju_probation",
"consent_nonplacement",
"consent_day",
"countyjail_num_month",
"jailbooking",
"adult_probation",
"totalfamcourt",
"delinquency",
"custodianship",
"service_corrd"),
facets=c("Juvenile justice",
"Jail and adult probation",
"Family court"),
grid=TRUE
)
figure6
# why isn't "newwithdrawal" showing up??
figure7 <-
corrmap(
district = "PPS",
pd=c("Absences_all",
"Absences_unexcused",
"all_suspension_count",
"disruption",
"drugs",
"fighting",
"weapon",
"other_sus",
"pct_fail",
# "GPA_Cumulative",
"prev_testperformance",
"newwith",
"unique_schools"),
facets=c("Number of days absent",
"Number of suspensions",
"Grades and test scores",
"School mobility"),
grid=TRUE
)
figure7
figure8 <-
corrmap(
district = "Propel",
pd=c("Absences_all",
"Absences_unexcused",
"all_suspension_count",
"disruption",
"drugs",
"fighting",
"weapon",
"other_sus",
"pct_fail",
# "GPA_Cumulative",
"prev_testperformance",
"newwithdrawal",
"unique_schools"),
facets=c("Number of days absent",
"Number of suspensions",
"Grades and test scores",
"School mobility"),
grid=TRUE
)
figure8
figure9 <-
corrmap(
district = "PPS",
pd=c("outpatient",
"counseling",
"inpatient",
"anyhomelessservice",
"anyhomelessservice_start",
"supportive_services",
"bridge_transitional",
"emergencyshelter_num_month",
"permanent",
"emergency_shelter_7",
"rentalassistanceandprevention_num_month",
"headstart_num_month",
"residential_num_month",
"residential_start",
"section8_num_month",
"section8_start"),
facets=c("Behavioral health services",
"Housing and family support services",
"Other housing supports (not DHS services)"),
grid=TRUE
)
figure9
figure10 <-
corrmap(
district = "Propel",
pd=c("outpatient",
"counseling",
"inpatient",
"anyhomelessservice",
"anyhomelessservice_start",
"supportive_services",
"bridge_transitional",
"emergencyshelter_num_month",
"permanent",
"emergency_shelter_7",
"rentalassistanceandprevention_num_month",
"headstart_num_month",
"residential_num_month",
"residential_start",
"section8_num_month",
"section8_start"),
facets=c("Behavioral health services",
"Housing and family support services",
"Other housing supports (not DHS services)"),
grid=TRUE
)
figure10
figure13 <-
corrmap(
district = "PPS",
pd=c("Absences_all",
"Chronic_absent_pre",
"all_suspension_count",
"suspension_pre",
"pct_fail",
"any_course_fail_pre",
# "GPA_term",
"GPA_Below_2.2_pre",
"Below_Basic_pre"),
facets=c("Outcomes"),
grid=F
)
figure13
# note: although the colors are all the same in the plot,
#       the t-statistics do differ. They are all >10 or <-10
#       so the colors are top-coded
#
# note: predictor for below basic on previous state test has n/a p-values
#       for all PPS??
figure14 <-
corrmap(
district = "Propel",
pd=c("Absences_all",
"Chronic_absent_pre",
"all_suspension_count",
"suspension_pre",
"pct_fail",
"any_course_fail_pre",
# "GPA_term",
"GPA_Below_2.2_pre",
"Below_Basic_pre"),
facets=c("Outcomes"),
grid=F
)
figure14
predictors %>%
filter(grepl("placement"))
predictors %>%
filter(grepl("placement", Variable))
predictors %>%
filter(grepl("anyplacement", Variable))
predictors %>%
filter(grepl("outpatient", Variable))
predictors %>%
filter(grepl("low-income", Variable))
predictors %>%
filter(grepl("low", Variable))
predictors %>%
filter(grepl("income", Variable))
predictors %>%
filter(grepl("income", Label))
predictors %>%
filter(grepl("juv", Label))
predictors %>%
filter(grepl("juv", lower(Label)))
predictors %>%
filter(grepl("juv", tolower(Label)))
predictors %>%
filter(grepl("active", tolower(Label)))
predictors %>%
filter(grepl("adjud", tolower(Label)))
predictors %>%
filter(grepl("county", tolower(Label)))
knitr::opts_chunk$set(echo = TRUE)
# knitr::opts_knit$set(root.dir = setwd(dirname(rstudioapi::getActiveDocumentContext()$path)))
knitr::opts_knit$set(root.dir = "C:\")
# knitr::opts_knit$set(root.dir = setwd(dirname(rstudioapi::getActiveDocumentContext()$path)))
knitr::opts_knit$set(root.dir = "C:/")
rm(list=ls())
getwd()
if (!require("pacman")) install.packages("pacman")
p_load(qdap)  #for column pasting
p_load(DT)    #for attractive tables-+
p_load(tidyverse)
p_load(lattice)
p_load(latticeExtra)
p_load(magrittr)
p_load(openxlsx)
p_load(yaml) # FOR yaml file
p_load(knitr)
p_load(sas7bdat)
p_load(assertthat) # for assert_that
p_load(haven)
conf <- yaml.load_file("config_data.yaml")
knitr::opts_chunk$set(echo = TRUE,
root.dir = setwd(dirname(rstudioapi::getActiveDocumentContext()$path)))
knitr::opts_chunk$set(echo = TRUE,
# root.dir = setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
root.dir = "C:/"
)
rm(list=ls())
if (!require("pacman")) install.packages("pacman")
p_load(qdap)  #for column pasting
p_load(DT)    #for attractive tables-+
p_load(tidyverse)
p_load(lattice)
p_load(latticeExtra)
p_load(magrittr)
p_load(openxlsx)
p_load(yaml) # FOR yaml file
p_load(knitr)
p_load(sas7bdat)
p_load(assertthat) # for assert_that
p_load(haven)
conf <- yaml.load_file("config_data.yaml")
source("..\\PSM_FUNCTIONS.R")
knitr::opts_chunk$set(echo = TRUE,
# root.dir = setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
root.dir = "C:/"
)
getwd()
knitr::opts_chunk$set(echo = TRUE)
# knitr::opts_knit$set(root.dir = setwd(dirname(rstudioapi::getActiveDocumentContext()$path)))
knitr::opts_knit$set(root.dir = "C:/))
knitr::opts_chunk$set(echo = TRUE)
# knitr::opts_knit$set(root.dir = setwd(dirname(rstudioapi::getActiveDocumentContext()$path)))
knitr::opts_knit$set(root.dir = "C:/")
rm(list=ls())
if (!require("pacman")) install.packages("pacman")
p_load(qdap)  #for column pasting
p_load(DT)    #for attractive tables-+
p_load(tidyverse)
p_load(lattice)
p_load(latticeExtra)
p_load(magrittr)
p_load(openxlsx)
p_load(yaml) # FOR yaml file
p_load(knitr)
p_load(sas7bdat)
p_load(assertthat) # for assert_that
p_load(haven)
conf <- yaml.load_file("config_data.yaml")
library(dplyr)
data <- read.csv('C:/Users/kskvoretz/Downloads/Inspector Assignment Tracker- ALL Programs.csv')
summary(data)
type(data$Spec)
class(data$Spec)
head(data$Spec)
# Right now, "Spec" is a factor, which is basically R's version of a categorical variable.
# We want to change this to a date
data$Spec <- as.Date(as.character(data$Spec))
as.character(data$Spec)
# Right now, "Spec" is a factor, which is basically R's version of a categorical variable.
# We want to change this to a date
?as.Date
data$Spec <- as.Date(as.character(data$Spec),format = "%m/%d/%Y")
head(data$Spec)
class(data$Spec)
library(tidyverse)
names(data)
inspector_stats_zero_pct <- data %>%
filter(Spec >= as.Date('9/1/2019','%m/%d/%Y')) %>%
group_by(Rehab.Specialist) %>%
summarise(cases = count(Case..))
class(data$Case..)
data <- read.csv('C:/Users/kskvoretz/Downloads/Inspector Assignment Tracker- ALL Programs.csv',
stringsAsFactors = FALSE)
summary(data)
class(data$Spec)
data$Spec <- as.Date(data$Spec,format = "%m/%d/%Y")
head(data$Spec)
class(data$Spec)
names(data)
class(data$Case..)
head(data$Case..)
# you might need to install this package if you don't have it
install.packages("tidyverse")
install.packages("tidyverse")
inspector_stats_zero_pct <- data %>%
filter(Spec >= as.Date('9/1/2019','%m/%d/%Y')) %>%
group_by(Rehab.Specialist) %>%
summarise(cases = count(Case..))
inspector_stats_zero_pct <- data %>%
filter(Spec >= as.Date('9/1/2019','%m/%d/%Y')) %>%
group_by(Rehab.Specialist) %>%
dplyr::summarise(cases = count(Case..))
library(dplyr)
inspector_stats_zero_pct <- data %>%
filter(Spec >= as.Date('9/1/2019','%m/%d/%Y')) %>%
group_by(Rehab.Specialist) %>%
dplyr::summarise(cases = count(Case..))
data$Rehab.Specialist <- as.factor(data$Rehab.Specialist)
inspector_stats_zero_pct <- data %>%
filter(Spec >= as.Date('9/1/2019','%m/%d/%Y')) %>%
group_by(Rehab.Specialist) %>%
dplyr::summarise(cases = count(Case..))
class(data$Case..)
inspector_stats_zero_pct <- data %>%
filter(Spec >= as.Date('9/1/2019','%m/%d/%Y')) %>%
group_by(Rehab.Specialist) %>%
dplyr::summarise(cases = n_distinct(Case..))
inspector_stats_zero_pct
data %>%
filter(Spec >= as.Date('9/1/2019','%m/%d/%Y'))
data %>%
filter(Spec >= as.Date('9/1/2019','%m/%d/%Y')) %>%
nrow()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
dict <- read.csv('../../data/final_data_dictionary.csv')
dict %>%
filter(outcome == 1)
library(dplyr)
dict %>%
filter(outcome == 1)
